#!/usr/bin/env python3
"""
Script pour supprimer toutes les tables PostgreSQL avec CASCADE
"""

import psycopg2
from sqlalchemy import text
from app.database import engine, Base
from app.models import User, Question, QuizSession, QuizAnswer

def force_reset_database():
    """Force la suppression de toutes les tables avec CASCADE"""
    print("üîÑ Nettoyage forc√© de la base de donn√©es...")
    
    try:
        # Connexion directe pour supprimer toutes les tables
        with engine.connect() as connection:
            print("  üóëÔ∏è  Suppression forc√©e de toutes les tables...")
            
            # R√©cup√®re toutes les tables existantes
            result = connection.execute(text("""
                SELECT tablename FROM pg_tables 
                WHERE schemaname = 'public';
            """))
            
            tables = [row[0] for row in result]
            print(f"  üìã Tables trouv√©es: {tables}")
            
            # Supprime chaque table avec CASCADE
            for table in tables:
                try:
                    connection.execute(text(f"DROP TABLE IF EXISTS {table} CASCADE;"))
                    print(f"    ‚úÖ {table} supprim√©e")
                except Exception as e:
                    print(f"    ‚ö†Ô∏è  Erreur avec {table}: {e}")
            
            connection.commit()
            print("  ‚úÖ Toutes les tables supprim√©es")
        
        # Recr√©e les tables avec le bon sch√©ma
        print("  üî® Cr√©ation des nouvelles tables...")
        Base.metadata.create_all(bind=engine)
        print("  ‚úÖ Nouvelles tables cr√©√©es")
        
        print("\nüéâ Base de donn√©es compl√®tement r√©initialis√©e!")
        print("\nTables disponibles:")
        print("  - users (utilisateurs)")
        print("  - questions (questions de quiz)")
        print("  - quiz_sessions (sessions de quiz)")
        print("  - quiz_answers (r√©ponses de quiz)")
        
    except Exception as e:
        print(f"‚ùå Erreur lors du nettoyage forc√©: {e}")
        raise

if __name__ == "__main__":
    force_reset_database()
