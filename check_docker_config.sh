#!/bin/bash
# üîç Script de v√©rification Docker-only pour projet Holbies

echo "üîç V√©rification de la configuration Docker-only..."
echo ""

# V√©rifier Docker
if command -v docker &> /dev/null; then
    echo "‚úÖ Docker install√© : $(docker --version)"
else
    echo "‚ùå Docker non install√© !"
    exit 1
fi

# V√©rifier Docker Compose
if command -v docker-compose &> /dev/null; then
    echo "‚úÖ Docker Compose install√© : $(docker-compose --version)"
else
    echo "‚ùå Docker Compose non install√© !"
    exit 1
fi

# V√©rifier fichiers Docker
if [ -f "deployment/docker-compose.yml" ]; then
    echo "‚úÖ docker-compose.yml pr√©sent"
else
    echo "‚ùå deployment/docker-compose.yml introuvable !"
    exit 1
fi

if [ -f "deployment/Dockerfile" ]; then
    echo "‚úÖ Dockerfile pr√©sent"
else
    echo "‚ùå deployment/Dockerfile introuvable !"
    exit 1
fi

# V√©rifier absence d'environnements virtuels
if [ -d ".venv" ] || [ -d "venv" ] || [ -d "env" ]; then
    echo "‚ö†Ô∏è  ATTENTION : Environnement virtuel Python d√©tect√© !"
    echo "   Supprimer avec : rm -rf .venv venv env"
    echo "   Ce projet utilise UNIQUEMENT Docker !"
    exit 1
else
    echo "‚úÖ Aucun environnement virtuel d√©tect√©"
fi

# V√©rifier restrictions
if [ -f "DOCKER_ONLY_RESTRICTION.md" ]; then
    echo "‚úÖ Fichier de restrictions pr√©sent"
else
    echo "‚ö†Ô∏è  Fichier de restrictions manquant"
fi

echo ""
echo "üéâ Configuration Docker-only valid√©e !"
echo ""
echo "üöÄ Pour d√©marrer l'application :"
echo "   docker-compose -f deployment/docker-compose.yml up --build"
echo ""
echo "üìÑ Voir DOCKER_ONLY_RESTRICTION.md pour plus d'infos"
