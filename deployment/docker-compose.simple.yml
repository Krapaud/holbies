version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-holberton_db}
      POSTGRES_USER: ${POSTGRES_USER:-holberton_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-holberton_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-holberton_user}:${POSTGRES_PASSWORD:-secure_password}@db:5432/${POSTGRES_DB:-holberton_db}
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-here}
      DEBUG: ${DEBUG:-false}
      HOST: 0.0.0.0
      PORT: 8000
      POSTGRES_DB: ${POSTGRES_DB:-holberton_db}
      POSTGRES_USER: ${POSTGRES_USER:-holberton_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../src:/app/src:ro
      - ../config:/app/config:ro
    restart: unless-stopped
    command: ["./deployment/wait-for-postgres.sh", "db", "python", "src/main.py"]

volumes:
  postgres_data:
